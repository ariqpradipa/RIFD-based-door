C51 COMPILER V9.60.0.0   RFIDBDCODE                                                        08/17/2021 15:22:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE RFIDBDCODE
OBJECT MODULE PLACED IN .\Objects\RFIDBDCode.obj
COMPILER INVOKED BY: C:\Program Files\Keil-v5\C51\BIN\C51.EXE RFIDBDCode.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\RFIDBDCode.lst) TABS(2) OBJECT(.\Objects\RFIDBDCode.obj)

line level    source

   1          // RFID based door lock
   2          
   3          #include <stdio.h>
   4          #include <string.h>
   5          #include <reg51.h>
   6          
   7          #define LCD P2
   8          
   9          sbit rs = P2^0;
  10          sbit rw = P2^1;
  11          sbit en = P2^2;
  12          sbit motor1 = P1^3;
  13          sbit motor2 = P1^2;
  14          
  15          char keyinput();
  16          void delay(int dtime);
  17          void lcdcmd(unsigned char ch);
  18          void lcddata(unsigned char ch);
  19          void lcdprint(char *str);
  20          void daten();
  21          void cmden();
  22          void init();
  23          void uart_init();
  24          
  25          char i;
  26          char rfid[13], ch = 0;
  27          
  28          void main() {
  29   1      
  30   1          uart_init();    // initialize uart
  31   1          init();         // initialize lcd
  32   1      
  33   1          lcdprint(" ===RFID LOCK===");
  34   1          lcdcmd(0xc0);
  35   1          lcdprint(" Door is Locked"); 
  36   1          delay(500);
  37   1      
  38   1          // loop to take card scan
  39   1          while(1) {
  40   2      
  41   2              lcdcmd(1);
  42   2              lcdprint(" Scan Your Card");
  43   2      
  44   2              // taking input
  45   2              i = 0;
  46   2              for(i=0; i<12; i++) {
  47   3      
  48   3                  rfid[i] = keyinput();
  49   3      
  50   3              }
  51   2              rfid[i] = '\0';
  52   2      
  53   2              lcdcmd(1);
  54   2          lcdprint("Processing Card");
C51 COMPILER V9.60.0.0   RFIDBDCODE                                                        08/17/2021 15:22:16 PAGE 2   

  55   2              lcdcmd(0xc0);
  56   2      
  57   2              for(i=0; i<12; i++) {
  58   3      
  59   3                  lcdprint("*");
  60   3      
  61   3              }
  62   2              delay(100);
  63   2      
  64   2              // compare the input with the predefined data
  65   2              if(strncmp(rfid, "AA2006527052", 12) == 0) {
  66   3      
  67   3                  lcdcmd(1);             
  68   3                  lcdprint(" Card Accepted!");
  69   3                  delay(300);
  70   3                  lcdcmd(1);
  71   3                  lcdprint(" =Door Unlocked=");
  72   3                  delay(200);
  73   3                  
  74   3                  // spin the motor to unlock the door
  75   3                  motor1=1;
  76   3                  motor2=0;
  77   3                  delay(500);
  78   3      
  79   3                  motor1=0;
  80   3                  motor2=1;
  81   3                  delay(400);
  82   3      
  83   3                  motor1=0;
  84   3                  motor2=0;
  85   3      
  86   3              }
  87   2              // if the card not exist
  88   2              else {
  89   3      
  90   3                 lcdcmd(1);
  91   3                 lcdprint("Card don't exist");
  92   3                 lcdcmd(0xc0);
  93   3                 lcdprint("Try Another Card");
  94   3                 delay(300);
  95   3      
  96   3              }
  97   2          }
  98   1      }
  99          
 100          char keyinput() {
 101   1      
 102   1          // wait for keyboard interrupt
 103   1          while(!RI);
 104   1          ch = SBUF;
 105   1          RI = 0;
 106   1          return ch;
 107   1      
 108   1      }
 109          
 110          void delay(int dtime) {
 111   1      
 112   1          // delay for the designated time
 113   1          unsigned char i;
 114   1          for(dtime; dtime>0; dtime--) {
 115   2      
 116   2              for(i=250; i>0; i--);
C51 COMPILER V9.60.0.0   RFIDBDCODE                                                        08/17/2021 15:22:16 PAGE 3   

 117   2              for(i=248; i>0; i--);
 118   2      
 119   2          }
 120   1      }
 121          
 122          void lcdcmd(unsigned char ch) {
 123   1      
 124   1          LCD = ch & 0xF0;
 125   1          cmden();
 126   1          LCD = (ch<<4) & 0xF0;
 127   1          cmden();
 128   1      
 129   1      }
 130          
 131          void lcddata(unsigned char ch) {
 132   1      
 133   1          LCD = ch & 0xF0;
 134   1          daten();
 135   1          LCD = (ch<<4) & 0xF0;
 136   1          daten();
 137   1      
 138   1      }
 139          
 140          void lcdprint(char *str) {
 141   1      
 142   1          // print text to the lcd
 143   1          while(*str) {
 144   2      
 145   2              lcddata(*str++);
 146   2      
 147   2          }
 148   1      }
 149          
 150          void daten() {
 151   1      
 152   1          // reset lcd display
 153   1          rs = 1;
 154   1          rw = 0;
 155   1          en = 1;
 156   1          delay(5);
 157   1        en = 0;
 158   1      
 159   1      }
 160          
 161          void cmden() {
 162   1      
 163   1          rs = 0;
 164   1          en = 1;
 165   1          delay(5);
 166   1          en = 0;
 167   1      
 168   1      }
 169          
 170          void init() {
 171   1      
 172   1          lcdcmd(0x02);
 173   1          lcdcmd(0x28);
 174   1          lcdcmd(0x0E);
 175   1          lcdcmd(0x01);
 176   1      
 177   1      }
 178          
C51 COMPILER V9.60.0.0   RFIDBDCODE                                                        08/17/2021 15:22:16 PAGE 4   

 179          void uart_init() {
 180   1      
 181   1          TMOD = 0x20;
 182   1          SCON = 0x50;
 183   1          TH1 = 0xFD;
 184   1          TR1 = 1;
 185   1      
 186   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    489    ----
   CONSTANT SIZE    =    147    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
